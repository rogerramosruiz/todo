version: '3'
services:
  auth:
    image: auth
    build: auth/
    env_file:
      - .auth.env
      - .auth.postgres.env
      - .redis.env
    environment:
      - DB_HOST=db_auth
      - REDIS_HOST=redis_auth
    depends_on:
      db_auth:
        condition: service_healthy
      redis_auth:
        condition: service_healthy
    
  task:
    image: tasks
    build: task/
    env_file:
      - .task.env
      - .task.postgres.env
    environment:
      - DB_HOST=db_task
      - AUTH_SERVER=auth:3000
    depends_on:
      db_task:
        condition: service_healthy
      auth:
        condition: service_started
  
  svelte:
    image: svelte-frontend
    build:
      context: frontend
      args:
        - PUBLIC_API_URL=$PUBLIC_API_URL
    expose:
      - 3000
    env_file:
      - .svelte.env

  db_auth:
    image: postgres
    restart: always
    env_file:
      - .auth.postgres.env
    volumes:
      - ./volumes/db_auth:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 2s
      retries: 5
      start_period: 2s
      timeout: 10s
  
  db_task:
    image: postgres
    restart: always
    env_file:
      - .task.postgres.env
    volumes:
      - ./volumes/db_task:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER}"]
      interval: 2s
      retries: 5
      start_period: 2s
      timeout: 10s

  redis_auth:
    image: redis
    restart: always
    volumes:
      - ./volumes/redis/data:/data 
    env_file:
      - .redis.env
    command:      
      - /bin/sh
      - -c
      - redis-server --save 20 1 --loglevel warning --requirepass "$${REDIS_PASSWORD:?REDIS_PASSWORD variable is not set}"
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -a $${REDIS_PASSWORD} ping"]
      interval: 2s
      timeout: 5s
      retries: 5
      start_period: 2s

  nginx:
    image: nginx
    restart: always
    volumes:
      - ./nginx/conf/:/home/conf
    environment:
      - AUTH_SERVER=auth:3000
      - TASK_SERVER=task:8080
      - FRONTEND_SERVER=svelte:3000
    command: bash /home/conf/config.sh
    depends_on:
      - auth
      - task
      - svelte
    ports:
      - 80:80
      - 443:443